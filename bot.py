#!/usr/bin/env python
# -*- coding: utf-8 -*-

import telebot
from telebot import types
import math
from flask import Flask, request
import os

TOKEN = '1258032906:AAFM6VXY630JpSNUX19w2mFWPUsJI8nXPww'

bot = telebot.TeleBot(TOKEN)
server = Flask(__name__)

@bot.message_handler(commands = ['start'])
def welcome(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1 = types.KeyboardButton("–§—É–Ω–∫—Ü—ñ—è")
    item2 = types.KeyboardButton("–î–æ–ø–æ–º–æ–≥–∞ üìö")
    markup.add(item1, item2)

    bot.send_message(message.chat.id, "–í—ñ—Ç–∞—é, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, —Ü–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ —Ç–æ–±—ñ –¥–æ—Å–ª—ñ–¥–∏—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó".format(message.from_user, bot.get_me(),),
                     parse_mode = "html", reply_markup = markup)

@bot.message_handler(commands = ['help'])
def help(message):
    bot.send_message(message.chat.id, 'üî∏ –í–≤–µ–¥—ñ—Ç—å 3 —Ü–∏—Ñ—Ä–∏ –∑ —Ä—ñ–≤–Ω—è–Ω–Ω—è –ø–∞—Ä–∞–±–æ–ª–∏ (y(x)= <b>a</b>x¬≤ (<b>+</b>/<b>-</b>)'
                                      ' <b>b</b>x (<b>+</b>/<b>-</b>) <b>c</b>) —á–µ—Ä–µ–∑ –ø—Ä–æ–±—ñ–ª, '
                                      '–∞ —Å–∞–º–µ: <b>a b c</b> \nüî∏ –Ø–∫—â–æ –ø—Ä–µ–¥–µ–¥ <b>x</b> —Å—Ç–æ—ó—Ç—å "-"'
                                      ' –∞–±–æ –Ω—ñ—á–æ–≥–æ, –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–∏—Å–∞—Ç–∏ "-1" —á–∏ "1"\n\nüî∏ –Ø–∫—â–æ b –∞–±–æ —Å –ø—Ä–æ–ø—É—â–µ–Ω–Ω–æ,'
                                      ' –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–∏—Å–∞—Ç–∏ "0"\n\n<b>–ù–ê–ü–†–ò–ö–õ–ê–î: -4 5 2</b>\n\n<b>‚ÄºÔ∏è–î–û–ü–£–°–ö–ê–Æ–¢–¨–°–Ø –õ–ò–®–ï –ß–ò–°–õ–ê‚ÄºÔ∏è</b> ',parse_mode = "html")

@bot.message_handler(content_types = ['text'])
def lalala(message):
    try:
        if message.chat.type == 'private':

            if message.text == "–§—É–Ω–∫—Ü—ñ—è":
                bot.send_message(message.chat.id, "‚ñ´Ô∏è–í–≤–µ–¥—ñ—Ç—å 3 —Ü–∏—Ñ—Ä–∏ –∑ —Ä—ñ–≤–Ω—è–Ω–Ω—è –ø–∞—Ä–∞–±–æ–ª–∏ y(x)= <b>a</b>x¬≤ (<b>+</b>/<b>-</b>) <b>b</b>x (<b>+</b>/<b>-</b>)"
                                                  " <b>c</b> —á–µ—Ä–µ–∑ –ø—Ä–æ–±—ñ–ª, –∞ —Å–∞–º–µ: <b>a b c</b>",parse_mode = "html")
            elif message.text == "–î–æ–ø–æ–º–æ–≥–∞ üìö":
                bot.send_message(message.chat.id,
                                 'üî∏ –í–≤–µ–¥—ñ—Ç—å 3 —Ü–∏—Ñ—Ä–∏ –∑ —Ä—ñ–≤–Ω—è–Ω–Ω—è –ø–∞—Ä–∞–±–æ–ª–∏ (y(x)= <b>a</b>x¬≤ (<b>+</b>/<b>-</b>) <b>b</b>x'
                                 ' (<b>+</b>/<b>-</b>) <b>c</b>) —á–µ—Ä–µ–∑ –ø—Ä–æ–±—ñ–ª, –∞ —Å–∞–º–µ: <b>a b c</b> \nüî∏ –Ø–∫—â–æ –ø—Ä–µ–¥–µ–¥ <b>x</b> —Å—Ç–æ—ó—Ç—å "-"'
                                 ' –∞–±–æ –Ω—ñ—á–æ–≥–æ, –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–∏—Å–∞—Ç–∏ "-1" —á–∏ "1"\n\nüî∏ –Ø–∫—â–æ b –∞–±–æ —Å –ø—Ä–æ–ø—É—â–µ–Ω–Ω–æ, –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–∏—Å–∞—Ç–∏ "0"\n\n<b>–ù–ê–ü–†–ò–ö–õ–ê–î: -4 5 2</b><b>\n\n‚ÄºÔ∏è–î–û–ü–£–°–ö–ê–Æ–¢–¨–°–Ø'
                                 ' –õ–ò–®–ï –ß–ò–°–õ–ê‚ÄºÔ∏è</b> ',parse_mode = "html")
            else:
                lis = message.text.split()

                a = int(lis[0])
                b = int(lis[1])
                c = int(lis[2])

                def sdqq(a, b, c):
                    agg = []
                    xv = (-1 * b) / (2 * a)
                    yv = ((4 * a * c) - (b ** 2)) / (4 * a)
                    ans = b ** 2 - (4 * a * c)

                    if a > 0:
                        static = True
                    else:
                        static = False
                    agg.append('\nD(f) = (-‚àû;‚àû)')
                    # E(F)
                    if static:
                        agg.append("E(f) = (" + str(yv) + ";‚àû)\n")
                    else:
                        agg.append("E(f) = (-‚àû;" + str(yv) + ")\n")

                    # X, Y –í–µ—Ä—à–∏–Ω–∏
                    agg.append("X –í–µ—Ä—à–∏–Ω–∏ - (" + str(xv) + ";0)"+
                          "\nY –í–µ—Ä—à–∏–Ω–∏ - (" + str(yv) + ";0)\n\n" + "–í—ñ—Å—å Oy –ø–∞—Ä–∞–±–æ–ª–∞ –ø–µ—Ä–µ—Ç–∏–Ω–∞—î –≤ —Ç–æ—á—Ü—ñ (0;" + str(c) + ")\n")

                    if int(ans) == 0:
                        agg.append("–í—ñ—Å—å –ûx –ø–∞—Ä–∞–±–æ–ª–∞ –ø–µ—Ä–µ—Ç–∏–Ω–∞—î –ª–∏—à–µ –≤ –æ–¥–Ω—ñ–π —Ç–æ—á—Ü—ñ = (" + str(int(-1 * b / 2 * a)) + ";0)\n")

                    if int(ans) < 0:
                        agg.append("–ü–∞—Ä–∞–±–æ–ª–∞ –Ω–µ –ø–µ—Ä–µ—Ç–∏–Ω–∞—î –≤—ñ—Å—å Ox\n")
                    else:
                        x1 = (-1 * b + math.sqrt(ans)) / (2 * a)
                        x2 = (-1 * b - math.sqrt(ans)) / (2 * a)

                        lx = [x1, x2]
                        x1 = min(lx)
                        x2 = max(lx)

                        agg.append("–í—ñ—Å—å –ûx –ø–∞—Ä–∞–±–æ–ª–∞ –ø–µ—Ä–µ—Ç–∏–Ω–∞—î –≤ —Ç–æ—á–∫–∞—Ö: x1 (" + str(x1) + ";0) —ñ x2 (" + str(x2) + ";0)\n")

                    # –ü–ê–†–ù–ê –ù–ï –ü–ê–†–ù–ê
                    if xv == 0:
                        agg.append("–ü–∞—Ä–∞–±–æ–ª–∞ –ø–∞—Ä–Ω–∞\n")
                    else:
                        agg.append("–ü–∞—Ä–∞–±–æ–ª–∞ –Ω—ñ –ø–∞—Ä–Ω–∞ –Ω—ñ –Ω–µ –ø–∞—Ä–Ω–∞\n")

                    # –°–ø–∞–¥–∞—î –ó—Ä–æ—Å—Ç–∞—ç
                    if static:
                        agg.append("–ü–∞—Ä–∞–±–æ–ª–∞ –≤—ñ—Ç–∫–∞–º–∏ –≤–≤–µ—Ä—Ö\n\n–ó—Ä–æ—Å—Ç–∞—î –Ω–∞ —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ (" + str(
                            xv) + ";‚àû)\n–°–ø–∞–¥–∞—î –Ω–∞ —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ (-‚àû;" + str(xv) + ")\n")

                    else:
                        agg.append("–ü–∞—Ä–∞–±–æ–ª–∞ –≤—ñ—Ç–∫–∞–º–∏ –≤–Ω–∏–∑\n\n–ó—Ä–æ—Å—Ç–∞—î –Ω–∞ —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ (-‚àû;" + str(xv) + ")\n–°–ø–∞–¥–∞—î –Ω–∞ —ñ–Ω—Ç–µ—Ä–≤–∞–ª—ñ (" + str(
                            xv) + ";‚àû)\n")

                    # –î–æ–¥–∞—Ç–Ω–∞ –í—ñ–¥—î–º–Ω–∞
                    if static:
                        if int(ans) == 0:
                            agg.append("–ü—Ä–∞–±–æ–ª–∞ –¥–æ–¥–∞—Ç–Ω–∞ –≤—Å—é–¥–∏ –æ–∫—Ä—ñ–º 0: R/{0}\n–ü—Ä–∞–±–æ–ª–∞  –Ω–µ –≤—ñ–¥'—î–º–Ω–∞")
                        elif int(ans) < 0:
                            agg.append("–ü–∞—Ä–∞–±–æ–ª–∞ –¥–æ–¥–∞—Ç–Ω–∞ –≤—Å—é–¥–∏ R\n–ü—Ä–∞–±–æ–ª–∞  –Ω–µ –≤—ñ–¥'—î–º–Ω–∞")

                        else:
                            agg.append("–ü–∞—Ä–∞–±–æ–ª–∞ –¥–æ–¥–∞—Ç–Ω–∞ –Ω–∞ –ø—Ä–æ–º—ñ–∂–∫–∞—Ö (-‚àû;" + str(x1) + ") U (" + str(
                                x2) + ";‚àû)" + "\n–ü–∞—Ä–∞–±–æ–ª–∞ –≤—ñ–¥—î–º–Ω–∞ –Ω–∞ –ø—Ä–æ–º—ñ–∂–∫—É ({};{})".format(x1, x2))

                    else:
                        if int(ans) == 0:
                            agg.append("–ü—Ä–∞–±–æ–ª–∞ –≤—ñ–¥—î–º–Ω–∞ –≤—Å—é–¥–∏ –æ–∫—Ä—ñ–º 0: R/{0}\n–ü—Ä–∞–±–æ–ª–∞  –Ω–µ –¥–æ–¥–∞—Ç–Ω–∞")
                        elif int(ans) < 0:
                            agg.append("–ü–∞—Ä–∞–±–æ–ª–∞ –≤—ñ–¥—î–º–Ω–∞ –≤—Å—é–¥–∏ R\n–ü—Ä–∞–±–æ–ª–∞ –Ω–µ –¥–æ–¥–∞—Ç–Ω–∞")

                        else:
                            agg.append("–ü–∞—Ä–∞–±–æ–ª–∞ –≤—ñ–¥—î–º–Ω–∞ –Ω–∞ –ø—Ä–æ–º—ñ–∂–∫–∞—Ö (-‚àû;" + str(x1) + ") U (" + str(
                                x2) + ";‚àû)" + "\n–ü–∞—Ä–∞–±–æ–ª–∞ –¥–æ–¥–∞—Ç–Ω–∞ –Ω–∞ –ø—Ä–æ–º—ñ–∂–∫—É ({};{})".format(x1, x2))

                    bot.send_message(message.chat.id, "".join(i+"\n" for i in agg))
                sdqq(a, b, c)
    except:
        bot.send_message(message.chat.id, "{0.first_name}, –≤–≤–µ–¥—ñ—Ç—å /help –¥–ª—è –¥–æ–ø–æ–º–æ–≥–∏".format(message.from_user, bot.get_me()))

@server.route('/' + TOKEN, methods=['POST'])
def getMessage():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-9"))])
    return "!", 200

@server.route("/")
def webhook():
    bot.remove_webhook()
    bot.set_webhook(url='https://dry-chamber-52499.herokuapp.com/' + TOKEN)
    return "!", 200

if __name__ == "__main__":
    server.run(host="0.0.0.0", port=int(os.environ.get('PORT', 5000)))
